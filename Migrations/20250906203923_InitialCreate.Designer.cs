// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TunCRM.Data;

#nullable disable

namespace TunCRM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250906203923_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("TunCRM.Models.Aktivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FirsatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("TEXT");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<DateTime>("Tarih")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("Tip")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("FirsatId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Aktiviteler");
                });

            modelBuilder.Entity("TunCRM.Models.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ilce")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notlar")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("PostaKodu")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sehir")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("WebSitesi")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("TunCRM.Models.Firsat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Asama")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FirmaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("KapanisTarihi")
                        .HasColumnType("TEXT");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<decimal?>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Firsatlar");
                });

            modelBuilder.Entity("TunCRM.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Aktif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Sifre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SonGirisTarihi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Admin",
                            Aktif = true,
                            Email = "admin@tuncrm.com",
                            OlusturmaTarihi = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Soyad = "User",
                            Telefon = "0555 123 45 67"
                        });
                });

            modelBuilder.Entity("TunCRM.Models.Aktivite", b =>
                {
                    b.HasOne("TunCRM.Models.Firma", "Firma")
                        .WithMany("Aktiviteler")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TunCRM.Models.Firsat", "Firsat")
                        .WithMany("Aktiviteler")
                        .HasForeignKey("FirsatId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TunCRM.Models.Kullanici", "Kullanici")
                        .WithMany("Aktiviteler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Firsat");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("TunCRM.Models.Firsat", b =>
                {
                    b.HasOne("TunCRM.Models.Firma", "Firma")
                        .WithMany("Firsatlar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TunCRM.Models.Kullanici", "Kullanici")
                        .WithMany("Firsatlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("TunCRM.Models.Firma", b =>
                {
                    b.Navigation("Aktiviteler");

                    b.Navigation("Firsatlar");
                });

            modelBuilder.Entity("TunCRM.Models.Firsat", b =>
                {
                    b.Navigation("Aktiviteler");
                });

            modelBuilder.Entity("TunCRM.Models.Kullanici", b =>
                {
                    b.Navigation("Aktiviteler");

                    b.Navigation("Firsatlar");
                });
#pragma warning restore 612, 618
        }
    }
}
